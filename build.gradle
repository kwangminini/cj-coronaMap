plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.cj.corona'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.webjars.bower:jquery:3.5.1'
    implementation 'org.webjars.bower:bootstrap:4.5.2'
    implementation 'com.google.code.gson:gson'
    implementation('org.apache.httpcomponents:httpclient')
    implementation('org.springframework.boot:spring-boot-starter-quartz')
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.X')
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.1.0'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    compile('org.springframework.boot:spring-boot-devtools')
    compile 'mysql:mysql-connector-java'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    runtimeOnly 'com.h2database:h2'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

test {
    useJUnitPlatform()
}
